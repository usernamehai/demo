7.Write a program to implement ES6 Iterator & Promises.



code1:
promise.js
const checkNumber = (num) => {
  return new Promise((resolve, reject) => {
    if (num > 0) {
      resolve("Positive number");
    } else {
      reject("Negative number");
    }
  });
};

let num = -5; 

checkNumber(num)
  .then((msg) => console.log(msg))
  .catch((err) => console.log(err));
------------------------------------------------
node promise.js





code2:
fibo.js(iterator)
function fibonacciIterator(max) {
  let a = 0, b = 1;

  return {
    next: function () {
      if (a > max) {
        return { done: true };
      }
      let value = a;
      let temp = a + b;
      a = b;
      b = temp;
      return { value: value, done: false };
    }
  };
}

const fib = fibonacciIterator(100);

let result = fib.next();
while (!result.done) {
  console.log(result.value);
  result = fib.next();
}
-----------------------------------------------
node fibo.js